@using ProdutividadeApp.Models
@using ProdutividadeApp.Pages
@using ProdutividadeApp.Controllers
@inject RegistryService RegistryService
@inject MoodService MoodService
@inject ProductivityService ProductivityService
@inject EmotionService EmotionService

@code {
    [Parameter] public List<DailyChartData> Dados { get; set; } = new();

    private List<int> produtividade = new();
    private List<string> emojis = new();
    private List<string> dias = new();

    protected override void OnParametersSet()
    {
        produtividade = Dados.Select(d => d.Value).ToList();
        emojis = Dados.Select(d => string.IsNullOrWhiteSpace(d.Emoji) ? "❓" : d.Emoji).ToList();
        dias = Dados.Select(d => string.IsNullOrWhiteSpace(d.Label) ? "?" : d.Label).ToList();
    }
    
    private string GetBarColor(int value)
    {
        if (value == 0) return "#777777";         // Cinzento neutro
        if (value < 20) return "#D32F2F";         // Baixa (vermelho forte)
        if (value < 40) return "#F57C00";         // Média-Baixa (laranja queimado)
        if (value < 60) return "#8E24AA";         // Média (roxo médio)
        if (value < 80) return "#1976D2";         // Boa (azul royal)
        return "#388E3C";                         // Excelente (verde escuro)

    }
    
    private string GetValueColor(int value)
    {
        return value < 40 ? "#fff" : "#333";
    }
}

<div class="chart-container">
    <h3 class="chart-title">Produtividade Semanal</h3>
    
    @if (Dados.Count == 7)
    {
        <div class="chart-wrapper">
            <div class="chart-area">
                <!-- Grid lines -->
                @for (int i = 0; i <= 5; i++)
                {
                    var bottom = 40 + (i * 40);
                    var percent = i * 20;
                    <div class="chart-grid" style="bottom: @(bottom)px;">
                        <span class="grid-label">@percent%</span>
                    </div>
                }
                
                <!-- Axes -->
                <div class="chart-y-axis"></div>
                <div class="chart-x-axis"></div>
                
                <!-- Bars -->
                @for (int i = 0; i < 7; i++)
                {
                    var barColor = GetBarColor(produtividade[i]);
                    var textColor = GetValueColor(produtividade[i]);
                    var height = produtividade[i] * 2;
                    
                    <div class="chart-column">
                        <div class="bar-value" style="color: @textColor;">@produtividade[i]%</div>
                        <div class="chart-bar" style="height: @(height)px; background-color: @barColor;">
                            <div class="bar-emoji">@emojis[i]</div>
                        </div>
                        <div class="bar-label">@dias[i]</div>
                    </div>
                }
            </div>
        </div>

        <div class="legend">
            <div class="legend-item">
                <div class="legend-color" style="background-color: #D32F2F"></div>
                <span>Baixa</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #F57C00"></div>
                <span>Média-Baixa</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #8E24AA"></div>
                <span>Média</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #1976D2"></div>
                <span>Boa</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #388E3C"></div>
                <span>Excelente</span>
            </div>
        </div>


    }
    else
    {
        <div class="no-data">
            <p>Sem dados suficientes para gerar gráfico.</p>
            <p>Registe seu humor e produtividade por 7 dias para visualizar.</p>
        </div>
    }
</div>